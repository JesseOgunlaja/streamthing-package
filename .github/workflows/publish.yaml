name: Publish to NPM

on:
  push:
    branches: main

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.diff.outputs.changed }}
      tag: ${{ steps.diff.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v6
        with:
          node-version: '25'
          registry-url: 'https://registry.npmjs.org'

      - id: diff
        run: |
          NEW_VERSION=$(node -p "require('./package.json').version")
          OLD_VERSION=$(npm view streamthing version || echo "0.0.0")
          if [ "$NEW_VERSION" != "$OLD_VERSION" ]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

          NEW_MAJOR=$(echo $NEW_VERSION | cut -d. -f1)
          OLD_MAJOR=$(echo $OLD_VERSION | cut -d. -f1)

          if [ "$NEW_MAJOR" -gt "$OLD_MAJOR" ]; then
            echo "tag=staged" >> "$GITHUB_OUTPUT"
          else
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          fi

  publish:
    runs-on: ubuntu-latest
    needs: check-version
    if: ${{ needs.check-version.outputs.version_changed == 'true' }}
    steps:
        - uses: actions/checkout@v5
        - uses: actions/setup-node@v6
          with:
            node-version: '25'
            registry-url: 'https://registry.npmjs.org'

        - name: Run integration tests
          if: ${{needs.check-version.outputs.tag == 'latest'}}
          env:
            SERVER_ID: ${{ secrets.SERVER_ID }}
            SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
            SERVER_REGION: ${{ vars.SERVER_REGION }}
          run: npm install &&  node test.js

        - name: Publish to NPM
          uses: JS-DevTools/npm-publish@v4
          with:
            token: ${{ secrets.NPM_TOKEN }}
            tag: ${{ steps.version.outputs.tag }}
